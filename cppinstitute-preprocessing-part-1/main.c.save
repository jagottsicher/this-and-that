//// ### Part 1
//
///* ######################################## */
//
//// ### 1.2.1 Module 1 - Quiz
//// ### QUESTION 1
//English is
//natural language
//programming language
//machine language
//
//// ### QUESTION 2
//High level language is
//type of programming lang
//lang spoken in society
//lang of mountain tribes
//
//// ### QUESTION 3
//Compiler is
//computer program to translate high level lang to machine lang
//computer program to translate machine lang to high level lang
//alternative lname for a processor
//
//// ### QUESTION 4
//Data type int is
//integer number
//internal number
//fractional number
//
//// ### QUESTION 5
//ThisIsTheNameOfTheVariable
//can be used as variable name
//cannot be used as variable name
//
//// ### QUESTION 6
//101Dalmatians
//can be used as variable name
//cannot be used as variable name
//
//// ### QUESTION 7
//int var;
//var = 100;
//var = var + 100;
//var = var + var;
//
//// ### QUESTION 8
//keyword
//must not be used other than the definition of lang standard
//most important word in a program
//function as a password to start programm
//
//// ### QUESTION 9
//comment is syntactical like
//space
//number
//keyword
//
//// ### QUESTION 10
//each variable consists of
//type,name,value
//header, footer, setter
//variability, stability, readability
//
//// ### 1.3.1 Module 1 - Test
//// ### QUESTION 1
//int var = 2;
//var = 4;
//var = var + 6;
//var = var + var;
//
//// ### QUESTION 2
//choose three legal out of six:
//_3monthOld
//three_month_old
//month3
//3monthOld
//int
//three month
//
//// ### QUESTION 3
//return in a function means:
//end function execution
//continuously repeats the function execution
//repeat function execution once, and then ends function execution
//
//// ### QUESTION 4
//set of rules how to combine symbols within a programming lang is called:
//syntax
//semantics
//lexis
//
//// ### QUESTION 5
//data type float is
//
//// ### QUESTION 6
//option to use high level lang on different commputer is called
//portability
//
//// ### QUESTION 7
//// expected output: 1
//#include <stdio.h>
//
//int main()
//{
//	int var = 1;
//	printf("%d \n", var);
//
//Answer: } at the end
//
//// ### QUESTION 8
//A file after translation called
//an executable
//
//// ### QUESTION 9
//#include <stdio.h>
//
//int main()
//{
//    int var;
//
//    var = 1;
//    var = 2;
///*  var = 3;  */
//
//    printf("%d", var);
//    return 0;
//}
//
//// ### QUESTION 10
//Select all true:
//C is case sensitive
//keyword can't be variable name'
//multiline comments possible
//decimal of octal 012 is 10
//nesting comment recommended practice
//decimal of hex 0x11 is 16
//
//
///* ######################################## */
//
//// ### 2.2.1 Module 2 - Quiz
//// ### QUESTION 1
//floating point vars are
//fractional numbers
//
//// ### QUESTION 2
//0.1E2 ???
//10.0
//1.0
//100.0
//
//// ### QUESTION 3
////value of f?
//
//int i;
//float f;
//
//i = 10 / 3;
//f = i * 3.0;
//
//// ### QUESTION 4
////value of i?
//
//int i;
//i = 2 * 2 / 2 + 2 * 2 - 1 / 2 % 2;
//
//// ### QUESTION 5
//If K is 75 in ASCII the M is
//77
//
//// ### QUESTION 6
////value of c?
//char c;
//c = 'A';
//c += ('Z' - 'A');
//c += ' ';
//c  = ('z' - 'a');
//
//// ### QUESTION 7
////value of i?
//int i;
//i = 100;
//i = (i == 100) + (i != 101);
//
//// ### QUESTION 8
//// Output after input of 0
//#include <stdio.h>
//
//int main(void)
//{
//    int i,j;
//    scanf("%d",&i);
//    if (i == 0)
//        i = i + 1;
//        j = i;
//
//    printf("%d", j / i);
//    return 0;
//}
//
//// ### QUESTION 9
//// value of i?
//int i;
//i = 100;
//i += (i > 0) + (i < 1000) + (i >= 100) + (i <= 100);
//
//// ### QUESTION 10
//// value of i?
//int i;
//    i = 100;
//    if(i >= 100)
//        i++;
//    if(i > 101);
//        i++;
//
//// ### 2.3.1 Module 2 - Test
//// ### QUESTION 1
//Valid variable name
//Monte_Carlo
//
//// ### QUESTION 2
//// value of k?
//int i, j, k;
//
//i = 3;
//j = ‑3;
//
//k = (i >= i) + (j <= j) + (i == j) + (i > j);
//
//// ### QUESTION 3
//// value of k?
//int i, j, k;
//
//i = 3;
//j = ‑3;
//
//k = i * j;
//k += j;
//k /= i;
//
//// ### QUESTION 4
////value of var?
//int var;
//var = 2;
//var = var * var;
//var = var + var;
//var = var / var;
//var = var % var;
//
//// ### QUESTION 5
//Which is invalid?
//0_
//
//// ### QUESTION 6
//8765E-2
//87.65
//8.765
//876.5
//0.8765
//
//// ### QUESTION 7
//// expected output 1
//#include <stdio.h>
//
//int main()
//{
//	var = 1;
//
//	printf("%d \n", var);
//	return 0;
//}
//int var above
//
//// ### QUESTION 8
//// value of c?
//char c;
//
//c = 'a';
//c ‑= ' ';
//
//// ### QUESTION 9
//// proper integer in C?
//123456
//
//// ### QUESTION 10
////value of x?
//float x;
//x = 1. / 2 * 3;
///***
//
//*/
//// ### QUESTION 11
//// int var, var; valid?
//No
//
//// ### QUESTION 12
//// value of var?
//int var;
//var = 2;
//var = var * var;
//var = var + var;
// /*
//var = var / var;
//var = var % var;
//  */
//
//// ### QUESTION 13
//// value of c?
//char c;
//c = '\';
//
//// ### QUESTION 14
//// value of k?
//int i, j, k;
//
//i = 4;
//j = 5;
//
//k = i-- * ++j;
//
//// ### QUESTION 15
//// value of k?
//int i, j, k;
//
//i = 4;
//j = 5;
//
//k = --i * j++;
//
//// ### QUESTION 16
//#include <stdio.h>
//
//int main(void)
//{
//    int i, j, k;
//
//	i = 2;
//    j = ‑2;
//
//	if(i)
//      	i‑‑;
//    if(j)
//       	j++;
//    k = i * j;
//
//	printf("%d",k);
//    return 0;
//}
//
//// ### QUESTION 17
//// value of x?
//int x;
//x = 1 / 2 * 3;
///* */
//
//// ### QUESTION 18
//value of literal?
//0x8
//
//// ### QUESTION 19
//// value of x?
//int x;
//x = 1 / 2;
//
//// ### QUESTION 20
//08 value of literal?
//8
//
///* ######################################## */
//
//// ### 3.2.1 Module 3 - Quiz
//// ### QUESTION 1
//#include <stdio.h>
//
//int main(void)
//{
//    int i;
//    i = 100;
//
//    if(i > 100)
//        i -= 100;
//    else if(i >= 0)
//        i += 100;
//    else if(i)
//        i += 100;
//    else
//        i -= 100;
//
//    printf("%d",i);
//    return 0;
//}
//
//// ### QUESTION 2
//#include <stdio.h>
//
//int main(void)
//{
//    int i;
//    i = 100;
//
//    if(i >= 100){
//        i += 100;
//      	if(i >= 0)
//            i -= 100;
//       	else {
//            i += 100;
//        }
//        i *= 5;
//    }
//    else
//        i -= 100;
//
//    printf("%d",i);
//    return 0;
//}
//
//// ### QUESTION 3
//#include <stdio.h>
//
//int main(void)
//{
//    long l;
//    int i;
//
//    l = 1l + 1L;
//    i = l;
//
//    printf("%d",i);
//    return 0;
//}
//
//// ### QUESTION 4
//// ASCII code of '$' equals 36
//#include <stdio.h>
//
//int main(void)
//{
//    int Int;
//    char Char;
//    short Short;
//    float Float;
//
//    Int = 100; Char = '$'; 	Short = Char; Float = 0.5;
//    Int = Short + Char + Float;
//    Float = Int;
//    printf("%f",Float);
//    return 0;
//}
//
//// ### QUESTION 5
//#include <stdio.h>
//
//int main(void)
//{
//    int i = 1;
//    int j = 0;
//    while(i < 111) {
//   		j++;
//   		i *= 2;
//    }
//
//    printf("%d",j);
//    return 0;
//}
//
//// ### QUESTION 6
//#include <stdio.h>
//
//int main(void)
//{
//    int i = 0;
//    int j = 100;
//
//    for(i = i; j; i++)
//        j /= 3;
//
//    printf("%d",i);
//    return 0;
//}
//
//// ### QUESTION 7
//#include <stdio.h>
//
//int main(void)
//{
//    int i,j;
//
//    for(i = 100; i <= 100; i++)
//        j = i;
//
//    printf("%d",j);
//    return 0;
//}
//
//// ### QUESTION 8
//#include <stdio.h>
//
//int main(void)
//{
//    int i = -100, j = 200;
//
//    if(i > 0 && j < 0)
//       	i++;
//    else if(i < 0 && j < 0)
//       	i--;
//    else if(i < 0 && j > 0)
//       	j--;
//    else
//       	j--;
//
//    printf("%d",i + j);
//    return 0;
//}
//
//// ### QUESTION 9
//#include <stdio.h>
//
//int main(void)
//{
//    int i,j = 3;
//
//    i = --j;
//    j += !(i % 2);
//
//	printf("%d",j);
//    return 0;
//}
//
//// ### QUESTION 10
//#include <stdio.h>
//
//int main(void)
//{
//    int i = -1, j = -i;
//    int w1, w2;
//
//    w1 = (i > 0) && (j < 0) || (i < 0) && (j > 0);
//    w2 = (i <= 0) || (j >= 0) && (i >= 0) || (j <= 0);
//
//    printf("%d", w1 == w2);
//    return 0;
//}
//
//// ### 3.3.1 Module 3 - Test
//// ### QUESTION 1
//#include <stdio.h>
//
//int main(void)
//{
//    int i = 1, j = -2;
//
//    for(;;) {
//      	i *= 3;
//       	j++;
//
//		if(i > 30)
//       		break;
//    }
//
//    printf("%d",j);
//    return 0;
//}
//
//// ### QUESTION 2
//#include <stdio.h>
//
//int main(void)
//{
//    int i = 7, j = i - i;
//
//    while(i) {
//     	i /= 2;
//       	j++;
//    }
//    printf("%d",j);
//    return 0;
//}
//
//// ### QUESTION 3
//#include <stdio.h>
//
//int main(void)
//{
//    int i = 1, j = -2, k;
//
//    k = (i >= 0) || (j >= 00) && (i <= 0) || (j <= 0);
//
//    printf("%d",k);
//    return 0;
//}
//
//// ### QUESTION 4
//#include <stdio.h>
//
//int main(void)
//{
//    int i = 7, j = i - i;
//
//    while(!i) {
//       	i /= 2;
//       	j++;
//    }
//
//    printf("%d",j);
//    return 0;
//}
//
//// ### QUESTION 5
//#include <stdio.h>
//
//int main(void)
//{
//    float x, y;
//    int i, j;
//
//	x = 1.5; y = 2.0;
//    i = 2; j = 3;
//    x = x * y + i / j;
//
//	printf("%f",x);
//    return 0;
//}
//
//// ### QUESTION 6
//#include <stdio.h>
//
//int main(void)
//{
//    int i = 0, j = 1, k;
//
//	k = i << j + j << i;
//    printf("%d",k);
//    return 0;
//}
//
//// ### QUESTION 7
//#include <stdio.h>
//
//int main(void)
//{
//    int i;
//
//	i = 1;
//
//    while(i < 16)
//       	i *= 2;
//
//	printf("%d",i);
//    return 0;
//}
//
//// ### QUESTION 8
//#include <stdio.h>
//
//int main(void)
//{
//    int i, j, k;
//
//	i = 0;
//    j = 0;
//
//	if(j)
//      	j--;
//    else
//       	i++;
//    if(i)
//       	i--;
//    else
//      	j++;
//
//	k = i + j;
//
//	printf("%d",k);
//    return 0;
//}
//
//// ### QUESTION 9
//#include <stdio.h>
//
//int main(void)
//{
//    int i, j, k;
//
//    i = 2;
//    j = 3;
//
//    if(j)
//       	j  ;
//    else if(i)
//       	i++;
//    else
//      	j++;
//    if(j)
//       	i  ;
//    else if(j)
//       	j++;
//    else
//		j = 0;
//
//	k = i + j;
//
//	printf("%d",k);
//    return 0;
//}
//
//// ### QUESTION 10
//#include <stdio.h>
//
//int main(void)
//{
//    int i, j;
//    i = 1; j = 1;
//
//    while(i < 16) {
//      	i += 4;
//       	j++;
//    }
//
//    printf("%d",j);
//    return 0;
//}
//
//// ### QUESTION 11
//#include <stdio.h>
//
//int main(void)
//{
//    int i = 1, j = 0, k;
//    k = !i | j;
//    k = !k;
//
//    printf("%d",k);
//    return 0;
//}
//
//// ### QUESTION 12
//#include <stdio.h>
//
//int main(void) {
//    int i = 1, j = 0, k;
//
//    k = i & j;
//    k |= !!k;
//
//    printf("%d",k);
//    return 0;
//}
//
//// ### QUESTION 13
//#include <stdio.h>
//
//int main(void)
//{
//    int i, j = 1;
//
//    for(i = 11; i > 0; i /= 3)
//     	j++;
//
//    printf("%d",j);
//    return 0;
//}
//
//// ### QUESTION 14
//#include <stdio.h>
//
//int main(void)
//{
//    int i = 1, j = -2, k;
//
//	k = (i >= 0) && (j >= 00) || (i <= 0) && (j <= 0);
//
//	printf("%d",k);
//    return 0;
//}
//
//// ### QUESTION 15
//#include <stdio.h>
//
//int main(void)
//{
//    int i = 1, j = -2, k;
//
//    k = !(i >= 0) || !(j >= 00) && !(i <= 0) || !(j <= 0);
//
//    printf("%d",k);
//    return 0;
//}
//
//// ### QUESTION 16
//#include <stdio.h>
//
//int main(void)
//{
//    int i, j, k;
//
//    i = -1;
//    j = 1;
//
//    if(i)
//     	j--;
//    if(j)
//      	i++;
//    k = i * j;
//
//    printf("%d",k);
//    return 0;
//}
//
//// ### QUESTION 17
//#include <stdio.h>
//
//int main(void)
//{
//    int i, j = 0;
//
//	for(i = 0; !i ; i++)
//      	j++;
//
//	printf("%d",j);
//    return 0;
//}
//
//// ### QUESTION 18
//#include <stdio.h>
//
//int main(void)
//{
//    double x = -.1;
//
//    int i = x;
//
//    printf("%d",i);
//    return 0;
//}
//
//// ### QUESTION 19
//#include <stdio.h>
//
//int main(void)
//{
//    int i = 1, j = 0, k;
//
//	k = (i ^ j) + (!i ^ j) + (i ^ !j) + (!i ^ !j);
//
//	printf("%d",k);
//    return 0;
//}
//
//// ### QUESTION 20
//#include <stdio.h>
//
//int main(void)
//{
//    float x, y;
//    int i, j;
//
//    x = 1.5; y = 2.0;
//    i = 2; j = 4;
//    x = x * y + (float)i / j;
//
//    printf("%f",x);
//    return 0;
//}
//
///* ######################################## */
//
//// ### 4.2.1 Module 4 - Quiz
//// ### QUESTION 1
//#include <stdio.h>
//
//int main(void)
//{
//    int i,j=0;
//
//    for(i = 0; i < 10; i+=2)
//        switch(i) {
//            case 0: j++; break;
//            case 2: j++;
//            case 4: j++; break;
//            default: j--;
//        }
//    printf("%d", j);
//    return 0;
//}
//
//// ### QUESTION 2
//#include <stdio.h>
//
//int main(void)
//{
//    int i, t[5];
//
//    for(i = 0; i < 5; i++)
//        t[i] = 2 * i;
//
//    i = 0;
//
//    for(i = 0; i < 5; i++)
//        i += t[i];
//
//    printf("%d", i);
//    return 0;
//}
//
//// ### QUESTION 3
//#include <stdio.h>
//
//int main(void)
//{
//    int i, s = 0, t[5] = {1,2,3,4};
//
//    for(i = 0; i < 5 ; i++)
//        s += t[i];
//
//    printf("%d",s);
//    return 0;
//}
//
//// ### QUESTION 4
//#include <stdio.h>
//
//int main(void)
//{
//    int i=10, j=20, *p, s=0;
//
//    p = &i;
//    i++;
//    (*p)++;
//    s = i + j + *p;
//
//    printf("%d",s);
//    return 0;
//}
//
//// ### QUESTION 5
//#include <stdio.h>
//
//int main(void)
//{
//    int i=1,j=2,*p;
//    p = &i;
//    *p = j;
//    *p = 2 * j;
//    i = *p;
//
//    printf("%d",i);
//    return 0;
//}
//
//// ### QUESTION 6
//#include <stdio.h>
//
//int main(void)
//{
//    int t[5] = {1,2,3,4,5};
//    int *p1, *p2, s=1;
//
//    p1 = &t[0];
//    p2 = &t[4];
//    s += *p1 + *p2;
//
//    printf("%d", s);
//    return 0;
//}
//
//// ### QUESTION 7
//#include <stdio.h>
//#include <string.h>
//
//int main(void)
//{
//    char t[20] = "ABCDEFGHIJK";
//    int  s = strlen(t);
//
//    t[3] = '\0';
//    s = strlen(t);
//
//    printf("%d",s);
//    return 0;
//}
//
//// ### QUESTION 8
//#include <stdio.h>
//#include <string.h>
//
//int main(void)
//{
//    char t[20] = "ABCDEFGHIJK";
//    int  s = strlen(t);
//
//    t[3] = '\0';
//    s += strlen(t);
//
//    printf("%d",s);
//    return 0;
//}
//
//// ### QUESTION 9
//#include <stdio.h>
//#include <string.h>
//
//int main(void)
//{
//    char t[10] = "";
//    int  s;
//
//    s = strlen(t);
//    strcat(t,"ABCDEF");
//    s += strlen(t);
//
//    printf("%d",s);
//    return 0;
//}
//
//// ### QUESTION 10
//#include <stdio.h>
//#include <string.h>
//
//int main(void)
//{
//    char t[20] = "ABCDEFGHIJK";
//    int  s = strlen(t);
//
//    t[3] = '\0';
//    s += strlen(t);
//    strcpy(t,"ABCDEF");
//    s += strlen(t);
//    strcat(t,"ABC");
//    s += strlen(t);
//
//    printf("%d",s);
//    return 0;
//}
//
//// ### 4.3.1 Module 4 - Test
//// ### QUESTION 1
//#include <stdio.h>
//#include <string.h>
//
//int main(void)
//{
//    char s[10] = "ABCDE";
//
//    strcat(s + 2, "ABCDE");
//
//	printf("%d", s[0] - s[2]);
//    return 0;
//}
//
//// ### QUESTION 2
//#include <stdio.h>
//
//int main(void)
//{
//    int t[10] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 }, *p = t + 4;
//
//    p += *p;
//    printf("%d", *p);
//    return 0;
//}
//
//// ### QUESTION 3
//#include <stdio.h>
//
//int main(void)
//{
//    char t[3];
//
//    printf("%d",sizeof(t) - sizeof(t[0]));
//    return 0;
//}
//
//// ### QUESTION 4
//#include <stdio.h>
//#include <stdio.h>
//
//int main(void)
//{
//    int i = 3, j = i - 2;
//
//    switch(i + 2) {
//        case 1: j++;
//        case 2: j++;
//        default:j = 0;
//        case 0: j++; break;
//    }
//
//	printf("%d",j);
//    return 0;
//}
//
//// ### QUESTION 5
//#include <stdio.h>
//#include <string.h>
//
//int main(void) {
//    char s[10] = "ABCDE";
//
//    strcat(s + 2, "ABCDE");
//
//    printf("%d", s[0] - s[2]);
//    return 0;
//}
//
//// ### QUESTION 6
//#include <stdio.h>
//#include <string.h>
//
//int main(void) {
//    char s[10] = "ABCDE";
//
//    strcat(s + 2, "ABCDE");
//
//    printf("%d", s[0] - s[2]);
//    return 0;
//}
//
//// ### QUESTION 7
//#include <stdio.h>
//
//int main(void)
//{
//    char t[] = { 'a', 'b', 'A', 'B' };
//
//    printf("%d",t[1] - t[0] + t[3] - t[2]);
//    return 0;
//}
//
//// ### QUESTION 8
//#include <stdio.h>
//
//int main(void)
//{
//    float t[5] = { 1E0, 1E1, 1E2, 1E3, 1E4 };
//
//    printf("%f",t[0] + t[2] + t[3]);
//    return 0;
//}
//
//// ### QUESTION 9
//#include <stdio.h>
//
//int main(void)
//{
//    int i = 1, *j = &i, **k = &j;
//
//    printf("%d",**k);
//    return 0;
//}
//
//// ### QUESTION 10
//#include <stdio.h>
//
//int main(void)
//{
//    int i, t[5];
//
//    t[4] = 0;
//
//    for(i = 3; i >= 0; i--)
//      	t[i] = t[4] * i;
//
//    printf("%d",t[0]);
//    return 0;
//}
//
//// ### QUESTION 11
//#include <stdio.h>
//
//int main(void)
//{
//    int s,i,t[] = { 0, 1, 2, 3, 4, 5 };
//
//    s = 1;
//
//	for(i = 2; i < 6 ; i += i + 1)
//        s += t[i];
//
//	printf("%d",s);
//    return 0;
//}
//
//// ### QUESTION 12
//#include <stdio.h>
//
//int main(void)
//{
//    int t[10] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 }, *p = t;
//
//    p += 2;
//    p += p[-1];
//
//    printf("%d", *p);
//    return 0;
//}
//
//// ### QUESTION 13
//#include <stdio.h>
//
//int main(void)
//{
//    int i, t[5];
//
//    t[0] = 0;
//
//    for(i = 1; i < 5; i++)
//      	t[i] = t[i - 1] + i;
//
//    printf("%d",t[4]);
//    return 0;
//}
//
//// ### QUESTION 14
//#include <stdio.h>
//#include <string.h>
//
//int main(void)
//{
//    char s[10] = "ABCDE";
//
//    strcpy(s + 2, "ABCDE");
//    printf("%d", s[0] - s[2]);
//    return 0;
//}
//
//// ### QUESTION 15
//#include <stdio.h>
//
//int main(void)
//{
//    int t[6];
//
//    printf("%d",sizeof(t) / sizeof(int));
//    return 0;
//}
//
//// ### QUESTION 16
//#include <stdio.h>
//
//int main(void)
//{
//    int i, t[3];
//
//    for(i = 2; i >=0 ; i--)
//        t[i] = i   1;
//
//	printf("%d",t[1] - t[t[0] + t[2]]);
//    return 0;
//}
//
//// ### QUESTION 17
//#include <stdio.h>
//
//int main(void)
//{
//    char s[] = "\0\1\2\3\4";
//
//    printf("%c",'A' + s[3]);
//    return 0;
//}
//
//// ### QUESTION 18
//#include <stdio.h>
//
//int main(void)
//{
//    int i = 3, j = i - 2;
//
//    switch(i - 2) {
//		case 1: j++;
//		case 2: j++;
//		case 0: j++; break;
//		default:j = 0;
//    }
//
//	printf("%d",j);
//    return 0;
//}
//
//// ### QUESTION 19
//#include <stdio.h>
//
//int main(void)
//{
//    int i,t[4] = { 1, 2, 4, 8 };
//
//    for(i = 0; i < 2 ; i++)
//      	t[i] = t[3 - i];
//    printf("%d",t[2]);
//    return 0;
//}
//
//// ### QUESTION 20
//#include <stdio.h>
//
//int main(void)
//{
//    printf("%c", "ACEGIK"[3] - 1);
//    return 0;
//}
//
///* ######################################## */
//
//// ### 5.2.1 Module 5 - Quiz
//// ### QUESTION 1
//#include <stdio.h>
//
//int main(void)
//{
//    int t[2][2];
//    int i,j,s = 0;
//
//    for(i = 0; i < 2; i++)
//        for(j = 0; j < 2; j++)
//            t[i][j] = 2 *i + j;
//
//    printf("%d",t[1][0]);
//    return 0;
//}
//
//// ### QUESTION 2
//#include <stdio.h>
//
//int main(void)
//{
//    int t[2][2];
//    int i,j,s = 0;
//
//	for(i = 0; i < 2; i++)
//        for(j = 1; j >= 0; j--)
//            t[i][j] = 2 * j + 1;
//
//	printf("%d",t[1][0]);
//    return 0;
//}
//
//// ### QUESTION 3
//#include <stdio.h>
//#include <stdlib.h>
//
//int main(void)
//{
//    char *p;
//    int	i;
//
//    p = (char *)malloc(10);
//
//    for(i = 0; i < 10; i++)
//		p[i] = 'A' + i;
//
//	printf("%c",*(p+9));
//    free(p);
//    return 0;
//}
//
//// ### QUESTION 4
//#include <stdio.h>
//#include <stdlib.h>
//
//int main(void)
//{
//    int    *p;
//    int i, j, s;
//
//	p = (int *)malloc(sizeof(int) * 5);
//
//	for(i = 0; i < 5; i++)
//        p[i] = 5 - 1;
//
//	s = 0;
//
//	for(i = 1; i < 5; i+=2)
//        s += p[i];
//
//	free(p);
//    printf("%d",s);
//    return 0;
//}
//
//// ### QUESTION 5
//#include <stdio.h>
//#include <stdlib.h>
//
//int main(void)
//{
//    int **pt;
//
//    pt = (int **)malloc (2 * sizeof (int *));
//    pt[0] = (int *) malloc(sizeof(int) * 2);
//    pt[1] = (int *) malloc(sizeof(int) * 2);
//    pt[1][1] = pt[0][0] = 1;
//    pt[0][1] = pt[1][0] = 2;
//
//    printf("%d", pt[0][0] / pt[1][0]);
//    free(pt[1]);
//    free(pt[0]);
//    free(pt);
//    return 0;
//}
//
//// ### QUESTION 6
//#include <stdio.h>
//
//int main(void)
//{
//    int t[2][3] = { { 3, 2, 1 }, { 1, 2, 3} };
//
//    printf("%d", sizeof(t) / sizeof(t[1]));
//    return 0;
//}
//
//// ### QUESTION 7
//#include <stdio.h>
//
//int main(void)
//{
//    int t[2][3] = { { 3, 2, 1 }, { 1, 2, 3} };
//
//    printf("%d", sizeof(t) / sizeof(t[1][1]));
//    return 0;
//}
//
//// ### QUESTION 8
//#include <stdio.h>
//
//int main(void)
//{
//    printf("%c", "ABCD"[2]);
//    return 0;
//}
//
//// ### QUESTION 9
//#include <stdio.h>
//
//int add(int par) {
//    par += par;
//    return par;
//}
//
//int add2(int p1, int p2) {
//    return p1 + p2;
//}
//
//int main(void) {
//    int var = 0;
//    var = add2(2,4);
//    var = add(var);
//    var = add2(var,var);
//    printf("%d",var);
//    return 0;
//}
//
//// ### QUESTION 10
//#include <stdio.h>
//
//int add(int par) {
//    par += par;
//    return par;
//}
//
//int add2(int p1, int p2) {
//    return p1 + p2;
//}
//
//int main(void) {
//    int var = 0;
//    var = add2(add(2),add(4));
//    var = add2(var,var);
//    printf("%d",var);
//    return 0;
//}
//
//// ### 5.3.1 Module 5 - Test
//// ### QUESTION 1
//#include <stdio.h>
//
//int main(void)
//{
//    char s[10] = "ABCDE", *p = s + 3;
//
//    printf("%d", p[1] - p[-1]);
//    return 0;
//}
//
//// ### QUESTION 2
//#include <stdio.h>
//
//int main(void)
//{
//    int *(t[10]);
//    int *u[10];
//
//    printf("%d",sizeof(t) != sizeof(u));
//    return 0;
//}
//
//// ### QUESTION 3
//#include <stdio.h>
//#include <stdlib.h>
//
//int main(void)
//{
//    int i,j;
//    int **p = (int **)malloc(2 * sizeof(int *));
//    p[0] = (int *)malloc(2 * sizeof(int));
//    p[1] = (int *)malloc(2 * sizeof(int));
//
//    for(i = 0; i < 2; i++)
//      	for(j = 0; j < 2; j++)
//       		p[i][j] = i + j;
//    printf("%d",p[0][0]);
//    return 0;
//}
//
//// ### QUESTION 4
//#include <stdio.h>
//
//void f(int i) {
//    i++;
//}
//
//int main(void)
//{
//    int i = 1;
//
//    f(i);
//
//    printf("%d", i);
//    return 0;
//}
//
//// ### QUESTION 5
//void f(void) {
//}
//
//int main(void)
//{
//    int i;
//    i = f();
//
//    printf("%d",i);
//    return 0;
//}
//
//// ### QUESTION 6
//#include <stdio.h>
//#include <stdlib.h>
//
//int main(void)
//{
//    int t[] = { 8, 4, 2, 1 };
//    int *p = (int *)malloc(sizeof(t));
//    int i;
//
//    for(i = 0; i < 4; i++)
//      	p[3 - i] = t[i];
//    printf("%d",*(p + 2));
//    free(p);
//    return 0;
//}
//
//// ### QUESTION 7
//#include <stdio.h>
//
//int main(void)
//{
//    int t[2][2] = { 1, 2, 4, 8 };
//
//    int s = 0, i, j;
//
//    for(i = 2; i; i -= 2)
//      	for(j = 1; j < 2; j += 2)
//       		s += t[i - 1][j];
//    printf("%d",s);
//    return 0;
//}
//
//// ### QUESTION 8
//#include <stdio.h>
//
//int main(void)
//{
//    char s[] = "ABCDE", *p = s + 5;
//
//    printf("%d", p[-1] - *(p - 4));
//    return 0;
//}
//
//// ### QUESTION 9
//#include <stdio.h>
//
//int main(void)
//{
//    int t[] = { 1, 2, 3, 4, 5 }, *p = t;
//
//    *p++;
//    (*p)++;
//    *p++;
//
//    printf("%d",p[-1]);
//    return 0;
//}
//
//// ### QUESTION 10
//#include <stdio.h>
//
//int f(void) {
//}
//
//int main(void) {
//    int i;
//    i = f();
//
//    printf("%d",i);
//    return 0;
//}
//
//// ### QUESTION 11
//#include <stdio.h>
//#include <stdlib.h>
//
//int main(void)
//{
//    int *p = (int *)malloc(2 * sizeof(int));
//
//    *p = 2;
//    *(p + 1) = *(p) - 1;
//    *p = p[1];
//
//    printf("%d",*p);
//    free(p);
//    return 0;
//}
//
//// ### QUESTION 12
//#include <stdio.h>
//
//int main(void)
//{
//    int t[1][2][2] = { { { 1, 2 }, { 3, 4 } } };
//
//	int s = 0, i, j, k;
//
//    for(i = 1; i > 0; i -= 2)
//        for(j = 1; j < 2; j += 2)
//        	for(k = 0; k < 3; k += 3)
//        	s += t[k][i - 1][j];
//    printf("%d",s);
//    return 0;
//}
//
//// ### QUESTION 13
//#include <stdio.h>
//
//int main(void)
//{
//    int i = 0;
//
//	{
//        int i = 1;
//        main.i = i;
//    }
//
//    printf("%d",i);
//    return 0;
//}
//
//// ### QUESTION 14
//#include <stdio.h>
//
//int f(int i) {
//    return ++i;
//}
//
//int main(void)
//{
//    int i = 0;
//    i = f(f(i));
//
//    printf("%d",i);
//    return 0;
//}
//
//// ### QUESTION 15
//#include <stdio.h>
//
//void f(int i) {
//    i++;
//}
//
//int main(void)
//{
//    int i = 1;
//
//    f(i);
//
//    printf("%d", i);
//    return 0;
//}
//
//// ### QUESTION 16
//#include <stdio.h>
//
//int main(void)
//{
//    int *t[10];
//    int (*u)[10];
//
//    printf("%d",sizeof(t) != sizeof(u));
//    return 0;
//}
//
//// ### QUESTION 17
//#include <stdio.h>
//
//int f(int i) {
//	++i;
//    return i;
//}
//
//int main(void)
//{
//    int i = 1;
//    i = f(i);
//
//	printf("%d",i);
//    return 0;
//}
//
//// ### QUESTION 18
//#include <stdio.h>
//#include <stdlib.h>
//
//int main(void)
//{
//    int i,j;
//    int **p = (int **)malloc(2 * sizeof(int *));
//    p[0] = (int *)malloc(2 * sizeof(int));
//    p[1] = p[0];
//
//    for(i = 0; i < 2; i++)
//      	for(j = 0; j < 2; j++)
//       		p[i][j] = i + j;
//
//	printf("%d",p[0][0]);
//    return 0;
//}
//
//// ### QUESTION 19
//#include <stdio.h>
//
//int main(void)
//{
//    char *p = "12345", *q = p - 10;
//
//    printf("%d", q[14] - q[13]);
//    return 0;
//}
//
//// ### QUESTION 20
//#include <stdio.h>
//
//int f(int i) {
//    return ++i;
//}
//
//int main(void)
//{
//    int i = 0;
//    i = f(f(i));
//
//    printf("%d", i);
//    return 0;
//}
//
///* ######################################## */
//
//// ### 5.4.1 SUMMARY (Part 1) - Test
//// ### QUESTION 1
//#include <stdio.h>
//
//int main(void)
//{
//
//    int i = -1, j = 3;
//
//    for(j > 0; j; j--)
//      	i *= 2;
//
//    printf("%d", i + j);
//    return 0;
//}
//
//// ### QUESTION 2
//0x22 is what interger?
//
//// ### QUESTION 3
//#include <stdio.h>
//
//int main(void)
//{
//    int i, t[4];
//
//    t[3] = 0;
//
//    for(i = 1; i >= 0; i--)
//      	t[i] = t[3] * i;
//
//    printf("%d",t[1]);
//    return 0;
//}
//
//// ### QUESTION 4
//#include <stdio.h>
//
//int main(void)
//{
//    int i = 4, j = 1;
//
//    while(j > 0) {
//      	i /= 2;
//       	printf("%d", i);
//    }
//
//    printf("%d", i + j);
//    return 0;
//}
//
//// ### QUESTION 5
//#include <stdio.h>
//
//int main()
//{
//    int arr[5] = {1, 2, 3, 4, 5};
//    arr[1] = 0;
//    arr[3] = 0;
//
//  for(int i = 0; i < 5; ++i) {
//     printf("%d ", arr[i]);
//  }
//  return 0;
//
//    return 0;
//}
//
//// ### QUESTION 6
//#include <stdio.h>
//
//int main ()
//{
//    int* a, b;
//    b = 1;
//    a = &b;
//    b = 2;
//
//	printf("%d\n", b);
//    printf("%d", *a);
//
//   return 0;
//}
//
//// ### QUESTION 7
//#include <stdio.h>
//
//int main(void)
//{
//    int i = 3;
//    int j = i - 1 / i;
//
//    switch(i - j) {
//       	case  1: j--;
//       	case  2: j++;
//       	case  0: j++; break;
//       	default: j = -1;
//    }
//
//    printf("%d", --j);
//    return 0;
//}
//
//// ### QUESTION 8
////value of var?
//int var;
//
//var = 9;
//var = var / 2;
//
//// ### QUESTION 9
//#include <stdio.h>
//
//int main(void)
//{
//    int i, j;
//    i = 1; j = 1;
//
//    while(i > 16) {
//      	i += 4;
//       	j++;
//    }
//
//    printf("%d", j);
//    return 0;
//}
//
//// ### QUESTION 10
//#include <stdio.h>
//
//int fun(int a) {
//    int b = 1;
//    return a << b;
//}
//
//int main()
//{
//    int x;
//
//    scanf("%d", &x);
//
//    printf ("%d", fun(x));
//
//    return 0;
//}
//
//// ### QUESTION 11
//#include <stdio.h>
//
//void fun(int a, int b)
//{
//    printf("%d", b);
//    printf("%d", a);
//}
//int main()
//{
//    int arr[] = {1, 2, 3, 4};
//    fun(arr[1], arr[3]);
//    return 0;
//}
//
//// ### QUESTION 12
//// value of var?
//int var;
//
//var = 3;
//var = var * var;
///* var = var + var; */
///*
//var = var / var;
//var = var % var;
//*/
//var = var - 1;
//
//// ### QUESTION 13
//#include <stdio.h>
//
//int main(void)
//{
//
//    int i = 1, j = -1;
//
//    for(;;) {
//      	i *= 2;
//       	j++;
//
//       	if(i >= 16)
//        	break;
//    }
//
//	printf("%d",j);
//    return 0;
//}
//
//// ### QUESTION 14
//// How to comment in C?
///* comment */
//
//// ### QUESTION 15
//#include <stdio.h>
//
//int fun(int a=1) {
//    return a;
//}
//
//int main() {
//    printf("%d", fun(2));
//}
//
//// ### QUESTION 16
//// value of c?
//#include >stdio.h<
//
//int main(void)
//{
//    int a, b, c;
//
//    a = -1;
//    b = 2;
//
//    if(a)
//      	a--;
//    if(b)
//       	b++;
//
//    c = a * b;
//
//    printf("%d", c);
//    return 0;
//}
//
//// ### QUESTION 17
//#include <stdio.h>
//
//int main(void)
//{
//    int i = 2, j = 0;
//
//    switch(i + 5) {
//    case 1: j++;
//    case 2: j++;
//    default:j = 5;
//    case 0: j++; break;
//    }
//
//    printf("%d",j);
//    return 0;
//}
//
//// ### QUESTION 18
//// two valod floats:
//.1
//-0.1
//
//// ### QUESTION 19
//#include <stdio.h>
//
//int fun() {
//    int a;
//    return ++a;
//}
//
//int main()
//{
//    printf("%d", fun());
//    return 0;
//}
//
//// ### QUESTION 20
//// two option for arrays
//int arry[3] = {1, 2, 3}
//int arry[] = {1, 2, 3}
//
//// ### QUESTION 21
//#include <stdio.h>
//
//int main(void)
//{
//    int i = 1, j = 1, k = -1;
//
//    k = !i | j;
//    k = !k;
//
//    printf("%d", k);
//    return 0;
//}
//
//// ### QUESTION 22
//#include <stdio.h>
//
//int fun(int a) {
//    return a + 1;
//}
//
//int main()
//{
//    int a = 0;
//
//    fun(1);
//    printf("%d", a);
//}
//
//// ### QUESTION 23
//// value of var?
//int var;
//
//var = -1;
//var = var + 1;
//var = var + var;
//
//// ### QUESTION 24
//French is a?
//natural language.
//
//// ### QUESTION 25
//#include <stdio.h>
//
//int main(void)
//{
//    int i = -3, j = 0;
//
//    for(i++; i++; i++)
//      	j--;
//
//    printf("%d", i - j);
//    return 0;
//}
//
//// ### QUESTION 26
//#include <stdio.h>
//
//int main(void)
//{
//    int i, j, k;
//
//    i = 1;
//    j = 3;
//
//    if(j)
//       	j--;
//    else
//       	i++;
//    if(i)
//       	i--;
//    else
//       	j++;
//
//    k = i + j;
//
//    printf("%d", k);
//    return 0;
//}
//
//// ### QUESTION 27
//// three valid variable names
//ThisIsCamelCase
//My_Var
//_andThisVar
//
//// ### QUESTION 28
//// 013 eguals as an integer?
//13
//11
//19
//
//// ### QUESTION 29
//#include <stdio.h>
//
//int main(void)
//{
//    int i = 2, j = 1, k;
//
//    k = i >> j;
//    k <<= i;
//
//    printf("%d", k);
//    return 0;
//}
//
//// ### QUESTION 30
#include <stdio.h>
#include <string.h>

int main(void)
{
    char s[5] = "ABC";

    strcat(s + 1, "ABC");

	printf("%d", s[0] - s[1]);
    return 0;
}
